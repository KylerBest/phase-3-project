{"ast":null,"code":"var _jsxFileName = \"/home/kyler/Development/code/mod3/project/my-app-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Catalog from \"./Catalog\";\nimport Cart from \"./Cart\";\nimport OrderHistoryPage from \"./OrderHistoryPage\";\nimport OrderConfirmationPage from \"./OrderConfirmationPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState('catalog');\n  const [orderHistory, setOrderHistory] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/products\").then(r => r.json()).then(products => {\n      setProducts(products);\n    }).then(fetch(\"http://localhost:9292/orders\").then(r => r.json()).then(setOrderHistory)).catch(() => alert(\"ERROR: no connection\"));\n  }, []);\n\n  function addToCart(product) {\n    cart[product.id] ? setCart({ ...cart,\n      [product.id]: { ...product,\n        quantity: cart[product.id].quantity + 1\n      }\n    }) : setCart({ ...cart,\n      [product.id]: { ...product,\n        quantity: 1\n      }\n    });\n    console.log(cart);\n  }\n\n  function removeFromCart(productID) {\n    let newCart = { ...cart\n    };\n    cart[productID].quantity > 0 ? setCart({ ...cart,\n      [product.id]: { ...product,\n        quantity: cart[product.id].quantity - 1\n      }\n    }) : delete newCart[productID];\n    setCart(newCart);\n  }\n\n  function changePage(page) {\n    setCurrentPage(page);\n  }\n\n  const page = () => {\n    switch (currentPage) {\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(Catalog, {\n            products: products,\n            addToCart: addToCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Cart, {\n            cart: cart,\n            addToCart: addToCart,\n            removeFromCart: removeFromCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n\n      case 'orderHistory':\n        return /*#__PURE__*/_jsxDEV(OrderHistoryPage, {\n          setOrderHistory: setOrderHistory,\n          orderHistory: orderHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this);\n\n      case 'orderConfirmation':\n        return /*#__PURE__*/_jsxDEV(OrderConfirmationPage, {\n          cart: cart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      changePage: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), page()]\n  }, void 0, true);\n}\n\n_s(App, \"qqdryVrCvYLV2YKRTRBVEdlCMgU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kyler/Development/code/mod3/project/my-app-frontend/src/App.js"],"names":["React","useState","useEffect","Header","Catalog","Cart","OrderHistoryPage","OrderConfirmationPage","App","currentPage","setCurrentPage","orderHistory","setOrderHistory","products","setProducts","cart","setCart","fetch","then","r","json","catch","alert","addToCart","product","id","quantity","console","log","removeFromCart","productID","newCart","changePage","page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,SAAD,CAA9C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQL,QAAQ,IAAI;AAChBC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAJH,EAKGK,IALH,CAMID,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQN,eAFR,CANJ,EAUGS,KAVH,CAUS,MAAMC,KAAK,CAAC,sBAAD,CAVpB;AAWD,GAZQ,EAYN,EAZM,CAAT;;AAcA,WAASC,SAAT,CAAmBC,OAAnB,EAA2B;AACzBT,IAAAA,IAAI,CAACS,OAAO,CAACC,EAAT,CAAJ,GACAT,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACS,OAAO,CAACC,EAAT,GAAa,EAAC,GAAGD,OAAJ;AAAaE,QAAAA,QAAQ,EAAEX,IAAI,CAACS,OAAO,CAACC,EAAT,CAAJ,CAAiBC,QAAjB,GAA4B;AAAnD;AAAvB,KAAD,CADP,GAEAV,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACS,OAAO,CAACC,EAAT,GAAa,EAAC,GAAGD,OAAJ;AAAaE,QAAAA,QAAQ,EAAE;AAAvB;AAAvB,KAAD,CAFP;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD;;AAED,WAASc,cAAT,CAAwBC,SAAxB,EAAkC;AAChC,QAAIC,OAAO,GAAG,EAAC,GAAGhB;AAAJ,KAAd;AACAA,IAAAA,IAAI,CAACe,SAAD,CAAJ,CAAgBJ,QAAhB,GAA2B,CAA3B,GACAV,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACS,OAAO,CAACC,EAAT,GAAa,EAAC,GAAGD,OAAJ;AAAaE,QAAAA,QAAQ,EAAEX,IAAI,CAACS,OAAO,CAACC,EAAT,CAAJ,CAAiBC,QAAjB,GAA4B;AAAnD;AAAvB,KAAD,CADP,GAEA,OAAOK,OAAO,CAACD,SAAD,CAFd;AAGAd,IAAAA,OAAO,CAACe,OAAD,CAAP;AACD;;AAED,WAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvBvB,IAAAA,cAAc,CAACuB,IAAD,CAAd;AACD;;AAED,QAAMA,IAAI,GAAG,MAAM;AACjB,YAAOxB,WAAP;AACE;AACE,4BAAO;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACL,QAAC,OAAD;AACE,YAAA,QAAQ,EAAEI,QADZ;AAEE,YAAA,SAAS,EAAEU;AAFb;AAAA;AAAA;AAAA;AAAA,kBADK,eAKL,QAAC,IAAD;AACE,YAAA,IAAI,EAAER,IADR;AAEE,YAAA,SAAS,EAAEQ,SAFb;AAGE,YAAA,cAAc,EAAEM;AAHlB;AAAA;AAAA;AAAA;AAAA,kBALK;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAWF,WAAK,cAAL;AACE,4BAAO,QAAC,gBAAD;AACL,UAAA,eAAe,EAAEjB,eADZ;AAEL,UAAA,YAAY,EAAED;AAFT;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAIF,WAAK,mBAAL;AACE,4BAAO,QAAC,qBAAD;AACL,UAAA,IAAI,EAAEI;AADD;AAAA;AAAA;AAAA;AAAA,gBAAP;AAnBJ;AAuBD,GAxBD;;AA0BA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,UAAU,EAAEiB;AADd;AAAA;AAAA;AAAA;AAAA,YADF,EAKIC,IAAI,EALR;AAAA,kBADF;AAUD;;GA5EQzB,G;;KAAAA,G;AA8ET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Catalog from \"./Catalog\";\nimport Cart from \"./Cart\";\nimport OrderHistoryPage from \"./OrderHistoryPage\";\nimport OrderConfirmationPage from \"./OrderConfirmationPage\";\n\nfunction App() {\n\n  const [currentPage, setCurrentPage] = useState('catalog')\n  const [orderHistory, setOrderHistory] = useState([])\n  const [products, setProducts] = useState([])\n  const [cart, setCart] = useState([])\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/products\")\n      .then(r => r.json())\n      .then(products => {\n        setProducts(products)\n      })\n      .then(\n        fetch(\"http://localhost:9292/orders\")\n          .then(r => r.json())\n          .then(setOrderHistory)\n      )\n      .catch(() => alert(\"ERROR: no connection\"))\n  }, [])\n\n  function addToCart(product){\n    cart[product.id] ? \n    setCart({...cart, [product.id]:{...product, quantity: cart[product.id].quantity + 1}}) :\n    setCart({...cart, [product.id]:{...product, quantity: 1}})\n    console.log(cart)\n  }\n\n  function removeFromCart(productID){\n    let newCart = {...cart}\n    cart[productID].quantity > 0 ?\n    setCart({...cart, [product.id]:{...product, quantity: cart[product.id].quantity - 1}}) :\n    delete newCart[productID]\n    setCart(newCart)\n  }\n\n  function changePage(page){\n    setCurrentPage(page)\n  }\n\n  const page = () => {\n    switch(currentPage){\n      default:\n        return <div className=\"main\">\n          <Catalog\n            products={products}\n            addToCart={addToCart}\n          />\n          <Cart\n            cart={cart}\n            addToCart={addToCart}\n            removeFromCart={removeFromCart}\n          />\n        </div>\n      case 'orderHistory':\n        return <OrderHistoryPage\n          setOrderHistory={setOrderHistory}\n          orderHistory={orderHistory}\n        />\n      case 'orderConfirmation':\n        return <OrderConfirmationPage\n          cart={cart}\n        />\n    }\n  }\n\n  return (\n    <>\n      <Header\n        changePage={changePage}\n      />\n      {\n        page()\n      }\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}