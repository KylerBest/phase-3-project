{"ast":null,"code":"var _jsxFileName = \"/home/kyler/Development/code/mod3/project/my-app-frontend/src/EditOrderPage.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditOrderPage(_ref) {\n  let {\n    order,\n    setOrderItems,\n    orderItems,\n    closeEditMenu,\n    cancelOrder\n  } = _ref;\n\n  function changeItemQuantity(item_id, amount) {\n    let changedOrderItems = orderItems;\n    changedOrderItems.find(itemToChange => itemToChange.id === item_id).quantity += amount;\n    setOrderItems([...changedOrderItems]);\n  }\n\n  function saveChanges() {\n    if (orderItems.filter(i => i.quantity === 0).length === orderItems.length) {\n      cancelOrder(order.id, closeEditMenu);\n      return;\n    }\n\n    for (const item of orderItems) {\n      if (item.quantity > 0) {\n        fetch(`http://localhost:9292/order_items/${item.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            quantity: item.quantity\n          })\n        }).then(() => closeEditMenu());\n      } else {\n        fetch(`http://localhost:9292/order_items/${item.id}`, {\n          method: \"DELETE\"\n        }).then(() => {\n          setOrderItems(orderItems.filter(i => i.id !== item.id));\n          closeEditMenu();\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-confirmation-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cart-items\",\n        children: orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cart-item\",\n          children: [item.product.name, \" ($\", parseFloat(item.product.price).toFixed(2), \")  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"amount\",\n            children: [\"x\", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 97\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            onClick: () => changeItemQuantity(item.id, 1),\n            children: \"\\u2795\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), item.quantity > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            onClick: () => changeItemQuantity(item.id, -1),\n            children: \"\\u2796\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 50\n          }, this) : null]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"total\",\n        children: [\"Total: $\", parseFloat(orderItems.reduce((total, item) => total + item.product.price * item.quantity, 0)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"name-form\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"enter-name\",\n          id: \"name\",\n          type: \"text\",\n          value: order.customer.name,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveChanges,\n        disabled: orderItems.length < 1,\n        className: \"order-button\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EditOrderPage;\nexport default EditOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditOrderPage\");","map":{"version":3,"sources":["/home/kyler/Development/code/mod3/project/my-app-frontend/src/EditOrderPage.js"],"names":["React","EditOrderPage","order","setOrderItems","orderItems","closeEditMenu","cancelOrder","changeItemQuantity","item_id","amount","changedOrderItems","find","itemToChange","id","quantity","saveChanges","filter","i","length","item","fetch","method","headers","body","JSON","stringify","then","map","index","product","name","parseFloat","price","toFixed","reduce","total","customer"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction EditOrderPage({order, setOrderItems, orderItems, closeEditMenu, cancelOrder}){\n\n    function changeItemQuantity(item_id, amount){\n        let changedOrderItems = orderItems\n        changedOrderItems.find(itemToChange => itemToChange.id === item_id).quantity += amount\n        setOrderItems([...changedOrderItems])\n    }\n\n    function saveChanges(){\n        if(orderItems.filter(i => i.quantity === 0).length === orderItems.length) \n        {\n            cancelOrder(order.id, closeEditMenu)\n            return\n        }\n        for(const item of orderItems){\n            if(item.quantity > 0) {\n                fetch(`http://localhost:9292/order_items/${item.id}`, {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        quantity: item.quantity\n                    })\n                })\n                .then(() => closeEditMenu())\n            }else {\n                fetch(`http://localhost:9292/order_items/${item.id}`, {\n                    method: \"DELETE\"\n                })\n                .then(() => {\n                    setOrderItems(orderItems.filter(i => i.id !== item.id))\n                    closeEditMenu()\n                })\n            }\n        }\n    }\n\n    return (\n        <div className=\"order-confirmation-page\">\n            <h1>Edit Order</h1>\n            <div className=\"cart\">\n                <ul className=\"cart-items\">\n                    {orderItems.map((item, index) => \n                        <p className=\"cart-item\" key={index}> \n                            {item.product.name} (${parseFloat(item.product.price).toFixed(2)})  <span className=\"amount\">x{item.quantity}</span> \n                            <button className=\"remove-button\" onClick={() => changeItemQuantity(item.id, 1)}>➕</button>\n                            {item.quantity > 0 ? <button className=\"remove-button\" onClick={() => changeItemQuantity(item.id, -1)}>➖</button> : null}\n                        </p>\n                    )}\n                </ul>\n                <h2 className=\"total\">Total: ${parseFloat(orderItems.reduce((total, item) => total + item.product.price * item.quantity, 0)).toFixed(2)}</h2>\n                <form className=\"name-form\">\n                    <input \n                        className=\"enter-name\" \n                        id=\"name\" \n                        type=\"text\"\n                        value={order.customer.name}\n                        disabled={true}\n                    />\n                </form>\n                <button onClick={saveChanges} disabled={orderItems.length < 1} className=\"order-button\">\n                    Save Changes\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditOrderPage"]},"metadata":{},"sourceType":"module"}