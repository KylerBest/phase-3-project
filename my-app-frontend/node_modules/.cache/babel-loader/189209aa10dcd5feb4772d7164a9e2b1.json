{"ast":null,"code":"var _jsxFileName = \"/home/kyler/Development/code/mod3/project/my-app-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Catalog from \"./Catalog\";\nimport Cart from \"./Cart\";\nimport OrderHistoryPage from \"./OrderHistoryPage\";\nimport OrderConfirmationPage from \"./OrderConfirmationPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState('catalog');\n  const [orderHistory, setOrderHistory] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/products\").then(r => r.json()).then(setProducts).catch(() => alert(\"ERROR: can't retrieve product information\"));\n    fetch(\"http://localhost:9292/orders\").then(r => r.json()).then(setOrderHistory).catch(() => alert(\"ERROR: can't retrieve order information\"));\n  }, []);\n\n  function modifyCart(product, increaseItem) {\n    const index = cartItems.findIndex(item => item.id === product.id);\n\n    if (index === -1 && increaseItem) {\n      setCartItems([...cartItems, { ...product,\n        quantity: 1\n      }]);\n      return;\n    }\n\n    let newCart = [...cartItems];\n\n    if (increaseItem) {\n      newCart[index].quantity++;\n      setCartItems(newCart);\n    } else {\n      setCartItems(cartItems.filter(item => item.id !== product.id));\n    }\n  }\n\n  function onOrder(_ref) {\n    let {\n      customer_name\n    } = _ref;\n\n    function getCustomer() {\n      let result = null;\n      fetch(`http://localhost:9292/customers/${customer_name}`).then(r => r.json()).then(customer => {\n        if (customer) result = customer;else {\n          fetch('http://localhost:9292/customers', {\n            method: \"POST\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              name: customer_name\n            })\n          }).then(r => r.json()).then(newCustomer => result = newCustomer);\n        }\n      });\n      return result;\n    }\n\n    console.log(getCustomer());\n  }\n\n  function cancelOrder(order_id) {\n    fetch(`http://localhost:9292/orders/${order_id}`, {\n      method: \"DELETE\"\n    }).then(setOrderHistory(orderHistory.filter(order => order.id !== order_id))).catch(() => alert(\"ERROR: no connection\"));\n  }\n\n  function changePage(pageNum) {\n    setCurrentPage(pageNum);\n  }\n\n  const page = () => {\n    switch (currentPage) {\n      case 'catalog':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(Catalog, {\n            products: products,\n            modifyCart: modifyCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Cart, {\n            changePage: changePage,\n            modifyCart: modifyCart,\n            cartItems: cartItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this);\n\n      case 'orderHistory':\n        return /*#__PURE__*/_jsxDEV(OrderHistoryPage, {\n          orderHistory: orderHistory,\n          cancelOrder: cancelOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this);\n\n      case 'orderConfirmationPage':\n        return /*#__PURE__*/_jsxDEV(OrderConfirmationPage, {\n          cartItems: cartItems,\n          modifyCart: modifyCart,\n          onOrder: onOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      changePage: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), page()]\n  }, void 0, true);\n}\n\n_s(App, \"K/3wkLM+7FugxLhTCv1H8/Z3lU8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kyler/Development/code/mod3/project/my-app-frontend/src/App.js"],"names":["React","useState","useEffect","Header","Catalog","Cart","OrderHistoryPage","OrderConfirmationPage","App","currentPage","setCurrentPage","orderHistory","setOrderHistory","products","setProducts","cartItems","setCartItems","fetch","then","r","json","catch","alert","modifyCart","product","increaseItem","index","findIndex","item","id","quantity","newCart","filter","onOrder","customer_name","getCustomer","result","customer","method","headers","body","JSON","stringify","name","newCustomer","console","log","cancelOrder","order_id","order","changePage","pageNum","page"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Catalog from \"./Catalog\";\nimport Cart from \"./Cart\";\nimport OrderHistoryPage from \"./OrderHistoryPage\";\nimport OrderConfirmationPage from \"./OrderConfirmationPage\";\n\nfunction App() {\n\n  const [currentPage, setCurrentPage] = useState('catalog')\n  const [orderHistory, setOrderHistory] = useState([])\n  const [products, setProducts] = useState([])\n  const [cartItems, setCartItems] = useState([])\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/products\")\n      .then(r => r.json())\n      .then(setProducts)\n      .catch(() => alert(\"ERROR: can't retrieve product information\"))\n\n    fetch(\"http://localhost:9292/orders\")\n      .then(r => r.json())\n      .then(setOrderHistory)\n      .catch(() => alert(\"ERROR: can't retrieve order information\"))\n  }, [])\n\n  function modifyCart(product, increaseItem){\n    const index = cartItems.findIndex(item => item.id === product.id)\n    if(index === -1 && increaseItem){\n      setCartItems([...cartItems, {...product, quantity: 1}])\n      return\n    }\n    let newCart = [...cartItems]\n    if(increaseItem){\n      newCart[index].quantity++\n      setCartItems(newCart)\n    }else{\n      setCartItems(cartItems.filter(item => item.id !== product.id))\n    }\n  }\n\n  function onOrder({customer_name}){\n    function getCustomer(){\n      let result = null\n      fetch(`http://localhost:9292/customers/${customer_name}`)\n        .then(r => r.json())\n        .then(customer => {\n          if(customer) result = customer\n          else {\n            fetch('http://localhost:9292/customers', {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: customer_name\n              })\n            })\n              .then(r => r.json())\n              .then(newCustomer => result = newCustomer)\n          }\n        })\n      return result\n    }\n\n    console.log(getCustomer())\n  }\n\n  function cancelOrder(order_id){\n    fetch(`http://localhost:9292/orders/${order_id}`, {\n      method: \"DELETE\"\n    })\n      .then(setOrderHistory(orderHistory.filter(order => order.id !== order_id)))\n      .catch(() => alert(\"ERROR: no connection\"))\n  }\n\n  function changePage(pageNum){\n    setCurrentPage(pageNum)\n  }\n\n  const page = () => {\n    switch(currentPage){\n      case 'catalog':\n        return <div className=\"main\">\n          <Catalog\n            products={products}\n            modifyCart={modifyCart}\n          />\n          <Cart\n            changePage={changePage}\n            modifyCart={modifyCart}\n            cartItems={cartItems}\n          />\n        </div>\n      case 'orderHistory':\n        return <OrderHistoryPage\n          orderHistory={orderHistory}\n          cancelOrder={cancelOrder}\n        />\n      case 'orderConfirmationPage':\n        return <OrderConfirmationPage\n          cartItems={cartItems}\n          modifyCart={modifyCart}\n          onOrder={onOrder}\n        />\n    }\n  }\n\n  return (\n    <>\n      <Header\n        changePage={changePage}\n      />\n      {\n        page()\n      }\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}