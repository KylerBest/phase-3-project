{"ast":null,"code":"var _jsxFileName = \"/home/kyler/Development/code/mod3/my-app-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Cart from \"./Cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [orderHistory, setOrderHistory] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/products\").then(r => r.json()).then(setProducts).catch(() => alert(\"ERROR: no connection\"));\n  }, []);\n\n  function onAddToCart(product) {\n    const index = cartItems.findIndex(item => item.id === product.id);\n\n    if (index === -1) {\n      setCartItems([...cartItems, { ...product,\n        quantity: 1\n      }]);\n    } else {\n      let newCart = [...cartItems];\n      newCart[index].quantity++;\n      setCartItems(newCart);\n    }\n\n    console.log(cartItems);\n  }\n\n  function onRemoveFromCart(item) {}\n\n  function onOrder(order) {\n    setOrderHistory([...orderHistory, order]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        products: products,\n        onAddToCart: onAddToCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cart, {\n        cartItems: cartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"TM9pKWyifNzvl5Ro6v4wTG6RE8E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kyler/Development/code/mod3/my-app-frontend/src/App.js"],"names":["React","useState","useEffect","Header","Menu","Cart","App","orderHistory","setOrderHistory","products","setProducts","cartItems","setCartItems","fetch","then","r","json","catch","alert","onAddToCart","product","index","findIndex","item","id","quantity","newCart","console","log","onRemoveFromCart","onOrder","order"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQJ,WAFR,EAGGO,KAHH,CAGS,MAAMC,KAAK,CAAC,sBAAD,CAHpB;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,WAASC,WAAT,CAAqBC,OAArB,EAA6B;AAC3B,UAAMC,KAAK,GAAGV,SAAS,CAACW,SAAV,CAAoBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAhD,CAAd;;AACA,QAAGH,KAAK,KAAK,CAAC,CAAd,EAAgB;AACdT,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe,EAAC,GAAGS,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAf,CAAD,CAAZ;AACD,KAFD,MAEK;AACH,UAAIC,OAAO,GAAG,CAAC,GAAGf,SAAJ,CAAd;AACAe,MAAAA,OAAO,CAACL,KAAD,CAAP,CAAeI,QAAf;AACAb,MAAAA,YAAY,CAACc,OAAD,CAAZ;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACD;;AAED,WAASkB,gBAAT,CAA0BN,IAA1B,EAA+B,CAE9B;;AAED,WAASO,OAAT,CAAiBC,KAAjB,EAAuB;AACrBvB,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBwB,KAAlB,CAAD,CAAf;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,QAAQ,EAAEtB,QADZ;AAEE,QAAA,WAAW,EAAEU;AAFf;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD;AACE,QAAA,SAAS,EAAER;AADb;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD;;GA/CQL,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\nimport Cart from \"./Cart\";\n\nfunction App() {\n\n  const [orderHistory, setOrderHistory] = useState([])\n  const [products, setProducts] = useState([])\n  const [cartItems, setCartItems] = useState([])\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/products\")\n      .then(r => r.json())\n      .then(setProducts)\n      .catch(() => alert(\"ERROR: no connection\"))\n  }, [])\n\n  function onAddToCart(product){\n    const index = cartItems.findIndex(item => item.id === product.id)\n    if(index === -1){\n      setCartItems([...cartItems, {...product, quantity: 1}])\n    }else{\n      let newCart = [...cartItems]\n      newCart[index].quantity++\n      setCartItems(newCart)\n    }\n    console.log(cartItems)\n  }\n\n  function onRemoveFromCart(item){\n\n  }\n\n  function onOrder(order){\n    setOrderHistory([...orderHistory, order])\n  }\n\n  return (\n    <>\n      <Header/>\n      <div className=\"main\">\n        <Menu\n          products={products}\n          onAddToCart={onAddToCart}\n        />\n        <Cart\n          cartItems={cartItems}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}