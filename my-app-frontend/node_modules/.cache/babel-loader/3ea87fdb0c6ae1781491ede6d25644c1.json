{"ast":null,"code":"var _jsxFileName = \"/home/kyler/Development/code/mod3/project/my-app-frontend/src/EditOrderPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditOrderPage(_ref) {\n  _s();\n\n  let {\n    order\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-confirmation-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Confirm Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cart-items\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            onClick: () => modifyCart(item, false),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 29\n          }, this), item.name, \" ($\", parseFloat(item.price).toFixed(2), \")  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"amount\",\n            children: [\"x\", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 81\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"total\",\n        children: [\"Total: $\", parseFloat(cartItems.reduce((total, item) => total + item.price * item.quantity, 0)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"name-form\",\n        onSubmit: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"enter-name\",\n          id: \"name\",\n          type: \"text\",\n          value: order.customer.name,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: name.length < 1 || cartItems.length < 1,\n      className: \"order-button\",\n      onClick: () => onOrder({\n        customer_name: name\n      }),\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditOrderPage, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = EditOrderPage;\nexport default EditOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditOrderPage\");","map":{"version":3,"sources":["/home/kyler/Development/code/mod3/project/my-app-frontend/src/EditOrderPage.js"],"names":["React","useState","EditOrderPage","order","name","setName","cartItems","map","item","modifyCart","parseFloat","price","toFixed","quantity","id","reduce","total","e","preventDefault","customer","length","onOrder","customer_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,aAAT,OAA+B;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACKK,SAAS,CAACC,GAAV,CAAcC,IAAI,iBACf;AAAiB,UAAA,SAAS,EAAC,WAA3B;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,IAAD,EAAO,KAAP,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKA,IAAI,CAACJ,IAFV,SAEmBM,UAAU,CAACF,IAAI,CAACG,KAAN,CAAV,CAAuBC,OAAvB,CAA+B,CAA/B,CAFnB,sBAEwD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,4BAA2BJ,IAAI,CAACK,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFxD;AAAA,WAAQL,IAAI,CAACM,EAAb;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,+BAA+BJ,UAAU,CAACJ,SAAS,CAACS,MAAV,CAAiB,CAACC,KAAD,EAAQR,IAAR,KAAiBQ,KAAK,GAAGR,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACK,QAA5D,EAAsE,CAAtE,CAAD,CAAV,CAAqFD,OAArF,CAA6F,CAA7F,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAEK,CAAC,IAAIA,CAAC,CAACC,cAAF,EAA3C;AAAA,+BACI;AACI,UAAA,SAAS,EAAC,YADd;AAEI,UAAA,EAAE,EAAC,MAFP;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,KAAK,EAAEf,KAAK,CAACgB,QAAN,CAAef,IAJ1B;AAKI,UAAA,QAAQ,EAAE;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAuBI;AACI,MAAA,QAAQ,EAAEA,IAAI,CAACgB,MAAL,GAAc,CAAd,IAAmBd,SAAS,CAACc,MAAV,GAAmB,CADpD;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC;AAACC,QAAAA,aAAa,EAAElB;AAAhB,OAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAnCQF,a;;KAAAA,a;AAqCT,eAAeA,aAAf","sourcesContent":["import React, {useState} from \"react\";\n\nfunction EditOrderPage({order}){\n    const [name, setName] = useState(\"\")\n    return (\n        <div className=\"order-confirmation-page\">\n            <h1>Confirm Order</h1>\n            <div className=\"cart\">\n                <h1>Cart</h1>\n                <ul className=\"cart-items\">\n                    {cartItems.map(item => \n                        <p key={item.id} className=\"cart-item\"> \n                            <button className=\"remove-button\" onClick={() => modifyCart(item, false)}>‚ùå</button>\n                            {item.name} (${parseFloat(item.price).toFixed(2)})  <span className=\"amount\">x{item.quantity}</span> \n                        </p>\n                    )}\n                </ul>\n                <h2 className=\"total\">Total: ${parseFloat(cartItems.reduce((total, item) => total + item.price * item.quantity, 0)).toFixed(2)}</h2>\n                <form className=\"name-form\" onSubmit={e => e.preventDefault()}>\n                    <input \n                        className=\"enter-name\" \n                        id=\"name\" \n                        type=\"text\"\n                        value={order.customer.name}\n                        disabled={true}\n                    />\n                </form>\n            </div>\n            <button \n                disabled={name.length < 1 || cartItems.length < 1} \n                className=\"order-button\"\n                onClick={() => onOrder({customer_name: name})}\n            >\n                Save Changes\n            </button>\n        </div>\n    )\n}\n\nexport default EditOrderPage"]},"metadata":{},"sourceType":"module"}