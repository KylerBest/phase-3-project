{"ast":null,"code":"var _jsxFileName = \"/home/kyler/Development/code/mod3/project/my-app-frontend/src/EditOrderPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditOrderPage(_ref) {\n  _s();\n\n  let {\n    order,\n    closeEditMenu\n  } = _ref;\n  const originalOrder = order.order_items.map(item => {\n    return { ...item.product,\n      id: item.id,\n      quantity: item.quantity\n    };\n  });\n  const [orderItems, setOrderItems] = useState(originalOrder);\n\n  function removeOrderItem(item_id) {\n    setOrderItems(orderItems.filter(item => item.id !== item_id));\n  }\n\n  function cancelChanges() {\n    setOrderItems(originalOrder);\n    closeEditMenu();\n  }\n\n  function increaseItemQuantity(item_id) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-confirmation-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"back-button\",\n      onClick: () => cancelChanges(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cart-items\",\n        children: orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            onClick: () => removeOrderItem(item.id),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), item.name, \" ($\", parseFloat(item.price).toFixed(2), \")  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"amount\",\n            children: [\"x\", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 81\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            onClick: () => increaseItemQuantity(item.id),\n            children: \"\\u2795\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"total\",\n        children: [\"Total: $\", parseFloat(orderItems.reduce((total, item) => total + item.price * item.quantity, 0)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"name-form\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"enter-name\",\n          id: \"name\",\n          type: \"text\",\n          value: order.customer.name,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: orderItems.length < 1,\n        className: \"order-button\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditOrderPage, \"FuZ/0HYNHiH8yDaAhAL2NhP8fcg=\");\n\n_c = EditOrderPage;\nexport default EditOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditOrderPage\");","map":{"version":3,"sources":["/home/kyler/Development/code/mod3/project/my-app-frontend/src/EditOrderPage.js"],"names":["React","useState","EditOrderPage","order","closeEditMenu","originalOrder","order_items","map","item","product","id","quantity","orderItems","setOrderItems","removeOrderItem","item_id","filter","cancelChanges","increaseItemQuantity","index","name","parseFloat","price","toFixed","reduce","total","customer","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,aAAT,OAA8C;AAAA;;AAAA,MAAvB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAuB;AAE1C,QAAMC,aAAa,GAAGF,KAAK,CAACG,WAAN,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAChD,WAAO,EAAC,GAAGA,IAAI,CAACC,OAAT;AAAkBC,MAAAA,EAAE,EAAEF,IAAI,CAACE,EAA3B;AAA+BC,MAAAA,QAAQ,EAAEH,IAAI,CAACG;AAA9C,KAAP;AACH,GAFqB,CAAtB;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACI,aAAD,CAA5C;;AAEA,WAASS,eAAT,CAAyBC,OAAzB,EAAiC;AAC7BF,IAAAA,aAAa,CAACD,UAAU,CAACI,MAAX,CAAkBR,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYK,OAAtC,CAAD,CAAb;AACH;;AAED,WAASE,aAAT,GAAwB;AACpBJ,IAAAA,aAAa,CAACR,aAAD,CAAb;AACAD,IAAAA,aAAa;AAChB;;AAED,WAASc,oBAAT,CAA8BH,OAA9B,EAAsC,CAErC;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,OAAO,EAAE,MAAME,aAAa,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACKL,UAAU,CAACL,GAAX,CAAe,CAACC,IAAD,EAAOW,KAAP,kBACZ;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAML,eAAe,CAACN,IAAI,CAACE,EAAN,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKF,IAAI,CAACY,IAFV,SAEmBC,UAAU,CAACb,IAAI,CAACc,KAAN,CAAV,CAAuBC,OAAvB,CAA+B,CAA/B,CAFnB,sBAEwD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,4BAA2Bf,IAAI,CAACG,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFxD,eAGI;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAMO,oBAAoB,CAACV,IAAI,CAACE,EAAN,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAA8BS,KAA9B;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,+BAA+BE,UAAU,CAACT,UAAU,CAACY,MAAX,CAAkB,CAACC,KAAD,EAAQjB,IAAR,KAAiBiB,KAAK,GAAGjB,IAAI,CAACc,KAAL,GAAad,IAAI,CAACG,QAA7D,EAAuE,CAAvE,CAAD,CAAV,CAAsFY,OAAtF,CAA8F,CAA9F,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,+BACI;AACI,UAAA,SAAS,EAAC,YADd;AAEI,UAAA,EAAE,EAAC,MAFP;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,KAAK,EAAEpB,KAAK,CAACuB,QAAN,CAAeN,IAJ1B;AAKI,UAAA,QAAQ,EAAE;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAoBI;AAAQ,QAAA,QAAQ,EAAER,UAAU,CAACe,MAAX,GAAoB,CAAtC;AAAyC,QAAA,SAAS,EAAC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAnDQzB,a;;KAAAA,a;AAqDT,eAAeA,aAAf","sourcesContent":["import React, {useState} from \"react\";\n\nfunction EditOrderPage({order, closeEditMenu}){\n    \n    const originalOrder = order.order_items.map(item => {\n        return {...item.product, id: item.id, quantity: item.quantity}\n    })\n    \n    const [orderItems, setOrderItems] = useState(originalOrder)\n\n    function removeOrderItem(item_id){\n        setOrderItems(orderItems.filter(item => item.id !== item_id))\n    }\n\n    function cancelChanges(){\n        setOrderItems(originalOrder)\n        closeEditMenu()\n    }\n\n    function increaseItemQuantity(item_id){\n\n    }\n\n    return (\n        <div className=\"order-confirmation-page\">\n            <h3 className=\"back-button\" onClick={() => cancelChanges()}>Back</h3>\n            <h1>Edit Order</h1>\n            <div className=\"cart\">\n                <ul className=\"cart-items\">\n                    {orderItems.map((item, index) => \n                        <p className=\"cart-item\" key={index}> \n                            <button className=\"remove-button\" onClick={() => removeOrderItem(item.id)}>❌</button>\n                            {item.name} (${parseFloat(item.price).toFixed(2)})  <span className=\"amount\">x{item.quantity}</span> \n                            <button className=\"remove-button\" onClick={() => increaseItemQuantity(item.id)}>➕</button>\n                        </p>\n                    )}\n                </ul>\n                <h2 className=\"total\">Total: ${parseFloat(orderItems.reduce((total, item) => total + item.price * item.quantity, 0)).toFixed(2)}</h2>\n                <form className=\"name-form\">\n                    <input \n                        className=\"enter-name\" \n                        id=\"name\" \n                        type=\"text\"\n                        value={order.customer.name}\n                        disabled={true}\n                    />\n                </form>\n                <button disabled={orderItems.length < 1} className=\"order-button\">\n                    Save Changes\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditOrderPage"]},"metadata":{},"sourceType":"module"}